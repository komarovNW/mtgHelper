name: Add Issue to Project

on:
  issues:
    types: [opened]

jobs:
  add_to_project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check GitHub CLI version
        run: gh --version

      - name: List projects
        run: |
          gh project list --owner komarovNW --format=json

      - name: Set GH_TOKEN for GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Проверим, что переменная GH_TOKEN установлена правильно
          echo "GH_TOKEN is set"

      - name: Get project ID using GitHub API
        run: |
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/users/komarovNW/projects | jq -r '.[] | select(.title=="mtghelper") | .id'


      - name: Get project ID
        id: get_project_id
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Getting list of projects..."
          PROJECT_LIST=$(gh project list --owner komarovNW --format=json)
          echo "Project list: $PROJECT_LIST"
          
          PROJECT_ID=$(echo "$PROJECT_LIST" | jq -r '.projects[] | select(.title=="mtghelper") | .id')
          echo "Project ID: $PROJECT_ID"
          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV


      - name: Add issue to project
        run: |
          echo "Project ID: $PROJECT_ID"
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "content_id": "${{ github.event.issue.id }}",
              "content_type": "Issue",
              "project_id": "'${PROJECT_ID}'"
            }' \
            https://api.github.com/projects/v2/columns/cards
